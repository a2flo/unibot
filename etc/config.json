{
	// unibot options
	"unibot": {
		// irc user name of the bot
		"name": "[unibot]",
		// the bots "real name" (specified when connecting to a server or on CTCP requests)
		"realname": "UniBot",
		// if an irc user (which might be a previous bot) with the same name as the bot is already connected,
		// add the specified character(s) to the bots name until it can connect
		"alt_add": "_",
		// the bots password (used to authenticate/identify to the irc server/nickserv)
		"password": "PASSWORD",
	},
	
	// irc server options
	"server": {
		// irc server/host to connect to (can also be an IPv4 or IPv6 address)
		"hostname": "irc.freenode.net",
		// irc server port to connect to
		"port": 7000,
		// if enabled this will use ssl (tls 1.2) for all communication with the irc server
		"ssl": true,
		// irc channel name
		"channel": "#unichannel",
	},
	
	// bot owners
	"owner": {
		// names (irc user names): use ',' as a separator, whitespace will be stripped
		"name": "[flo],[flos_bot],benjo",
	},
	
	// logging options (apply to both console and file logging)
	"logging": {
		// 0 = none, 1 = +error, 2 = +warning, 3 = +debug, 4 = +msg, 5 = +undecorated output
		"verbosity": 5,
		// if enabled, this will, for each logging operation, open the log file in append mode, write to it and close it again
		"append_mode": true,
		// if enabled and verbosity >= 3, this will log msgs into a separate file
		"separate_msg_file": true,
		// if enabled prints the current time in each log msg (format: [%H:%M:%S.usecs])
		"use_time": true,
		// boolean, if enabled prints the log type in color (error = red, debug = green, ...)
		"use_color": true,
		// relative filename of the log file, relative to the current working directory (default: log.txt)
		"log_filename": "",
		// relative filename of the msg log file, only used/created if separate_msg_file = true (default: msg.txt)
		"msg_filename": ""
	},
	
	// irc server timeouts
	"timeouts": {
		// time interval in ms after which the bot will ping the irc server (default: 30s)
		"server_ping": 30000,
		// after a server ping, if the server doesn't answer during the specified amount of time (30s), the bot will restart
		"server_timeout": 30000,
	},

	// don't change this
	"compute": {
		// don't want to rely on cuda/opencl/metal here (or need them)
		"backend": "host",
	}
}
